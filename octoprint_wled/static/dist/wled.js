!function(){"use strict";let e=(e=21)=>{let s="",t=crypto.getRandomValues(new Uint8Array(e));for(;e--;){let n=63&t[e];s+=n<36?n.toString(36):n<62?(n-26).toString(36).toUpperCase():n<63?"_":"-"}return s};var s=window.ko,t=window.OctoPrint,n=window.$,o=window.OCTOPRINT_VIEWMODELS;n((function(){console.log("hi"),o.push({construct:function(o){var r,i,c=this,a=["idle","disconnected","started","failed","success","paused"],l=["print"];c.settingsViewModel=o[0],c.lights_on=s.observable(!0),c.createEffectObservables=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t={};return t.unique_id=s.observable(e),t.id=s.observable(0),t.brightness=s.observable(200),t.color_primary=s.observable("#ffffff"),t.color_secondary=s.observable("#000000"),t.color_tertiary=s.observable("#000000"),t.effect=s.observable("Solid"),t.intensity=s.observable(127),t.speed=s.observable(127),t.override_on=s.observable(!1),t},c.createProgressObservables=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return{unique_id:s.observable(e),id:s.observable(0),brightness:s.observable(200),color_primary:s.observable("#ffffff"),color_secondary:s.observable("#000000"),override_on:s.observable(!1)}},c.setEditingObservables=function(e,s){e.editing(s)},c.setEffectsFromSettings=function(){var e=c.settingsViewModel.settings.plugins.wled;a.forEach((function(s){c.effects[s].enabled(e.effects[s].enabled()),c.effects[s].segments([]),e.effects[s].settings().forEach((function(t,n){var o=c.createEffectObservables();o.unique_id(e.effects[s].settings()[n].unique_id()),o.id(e.effects[s].settings()[n].id()),o.brightness(e.effects[s].settings()[n].brightness()),o.color_primary(e.effects[s].settings()[n].color_primary()),o.color_secondary(e.effects[s].settings()[n].color_secondary()),o.color_tertiary(e.effects[s].settings()[n].color_tertiary()),o.effect(e.effects[s].settings()[n].effect()),o.speed(e.effects[s].settings()[n].speed()),o.override_on(e.effects[s].settings()[n].override_on()),c.effects[s].segments.push(o)}))})),l.forEach((function(s){c.progress[s].enabled(e.progress[s].enabled()),c.progress[s].segments([]),e.progress[s].settings().forEach((function(t,n){var o=c.createProgressObservables();o.unique_id(e.progress[s].settings()[n].unique_id()),o.id(e.progress[s].settings()[n].id()),o.brightness(e.progress[s].settings()[n].brightness()),o.color_primary(e.progress[s].settings()[n].color_primary()),o.color_secondary(e.progress[s].settings()[n].color_secondary()),o.override_on(e.progress[s].settings()[n].override_on()),c.progress[s].segments.push(o)}))}))},c.effects=(r={},a.forEach((function(e){var t;r[e]=((t={}).enabled=s.observable(),t.segments=s.observableArray([]),t.editing=s.observable(c.createEffectObservables()),t)})),r),c.progress=(i={},l.forEach((function(e){i[e]={enabled:s.observable(),segments:s.observableArray([]),editing:s.observable(c.createProgressObservables())}})),i),c.addEffect=function(s){var t=e(8),n=c.createEffectObservables(t);c.effects[s].segments.push(n),c.editEffect(s,n)},c.addProgressEffect=function(s){var t=e(8),n=c.createProgressObservables(t);c.progress[s].segments.push(n),c.editProgressEffect(s,n)},c.editEffect=function(e,s){c.effects[e].editing(s),c.showEditModal(e)},c.editProgressEffect=function(e,s){c.progress[e].editing(s),c.showEditModal(e,"Progress")},c.deleteEffect=function(e,s){c.effects[e].segments.remove(s)},c.deleteProgressEffect=function(e,s){c.progress[e].segments.remove(s)},c.showEditModal=function(e,s){n("#WLED"+e+(s||"")+"EditModal").modal("show")},c.hideEditModal=function(e,s){n("#WLED"+e+(s||"")+"EditModal").modal("hide")},c.requestInProgress=s.observable(!1),c.testConnectionStatus=s.observable(),c.testConnectionOK=s.observable(!1),c.testConnectionError=s.observable(),c.testInProgress=s.observable(),c.testConnection=function(){var e={host:c.settingsViewModel.settings.plugins.wled.connection.host(),password:c.settingsViewModel.settings.plugins.wled.connection.password(),port:c.settingsViewModel.settings.plugins.wled.connection.port(),request_timeout:c.settingsViewModel.settings.plugins.wled.connection.request_timeout(),tls:c.settingsViewModel.settings.plugins.wled.connection.tls(),username:c.settingsViewModel.settings.plugins.wled.connection.username(),auth:c.settingsViewModel.settings.plugins.wled.connection.auth()};c.testInProgress(!0),c.testConnectionOK(!0),c.testConnectionStatus(""),c.testConnectionError(""),t.simpleApiCommand("wled","test",{config:e})},c.fromTestResponse=function(e){c.testInProgress(!1),e.success?(c.testConnectionOK(!0),c.testConnectionStatus(e.message),c.testConnectionError("")):(c.testConnectionOK(!1),c.testConnectionStatus(e.error),c.testConnectionError(e.exception))},c.toggle_lights=function(){t.simpleApiCommand("wled",c.lights_on()?"lights_off":"lights_on").done((function(e){c.lights_on(e.lights_on)}))},c.statusConnected=s.observable(!1),c.statusConnectionError=s.observable(),c.statusConnectionHost=s.observable(),c.statusConnectionPort=s.observable(),c.statusConnectionVersion=s.observable(),c.availableEffects=s.observableArray(),c.fromGetResponse=function(e){e.connected?(c.statusConnected(!0),c.statusConnectionHost(e.connection_info.host),c.statusConnectionPort(e.connection_info.port),c.statusConnectionVersion(e.connection_info.version),c.availableEffects(c.listEffects(e.effects))):(c.statusConnected(!1),c.statusConnectionError(e.error+": "+e.exception)),c.requestInProgress(!1)},c.listEffects=function(e){var s=[];return e.forEach((function(e){s.push(e.name)})),s},c.onAfterBinding=c.onEventSettingsUpdated=function(){c.setEffectsFromSettings(),c.requestInProgress(!0),t.simpleApiGet("wled").done((function(e){c.lights_on(e.lights_on)}))},c.onDataUpdaterPluginMessage=function(e,s){"wled"===e&&("api_get"===s.type?c.fromGetResponse(s.content):"api_post_test"===s.type&&c.fromTestResponse(s.content))},c.onSettingsBeforeSave=function(){a.forEach((function(e){c.settingsViewModel.settings.plugins.wled.effects[e].settings(c.effects[e].segments()),c.settingsViewModel.settings.plugins.wled.effects[e].enabled(c.effects[e].enabled())})),l.forEach((function(e){c.settingsViewModel.settings.plugins.wled.progress[e].settings(c.progress[e].segments()),c.settingsViewModel.settings.plugins.wled.progress[e].enabled(c.progress[e].enabled())}))}},dependencies:["settingsViewModel"],elements:["#settings_plugin_wled","#navbar_plugin_wled"]})}))}();